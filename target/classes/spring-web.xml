<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/task  
	http://www.springframework.org/schema/task/spring-task-3.0.xsd ">

	<!-- 激活组件扫描功能,扫描aop的相关组件组件 -->
	<!--<context:component-scan base-package="org.seckill.aop"/> -->
	<!-- 启动对@AspectJ注解的支持 -->
	<!--<aop:aspectj-autoproxy proxy-target-class="false"/> -->

	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<!-- 添加注解驱动 -->
	<mvc:annotation-driven />


	<!-- 任务调度器 -->
	<task:scheduler id="scheduler" pool-size="10" />

	<!--开启注解调度支持 @Scheduled -->
	<task:annotation-driven executor="scheduler"
		proxy-target-class="true" />


	<!-- 扫描任务 -->
	<context:component-scan
		base-package="com.ssm.controller" />

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/resources/**" location="/static" />
	<mvc:resources mapping="/css/**" location="/static/css" />
	<mvc:resources mapping="/js/**" location="/static/js" />
	<mvc:resources mapping="/img/**" location="/static/img" />
	<mvc:resources mapping="/slick/**" location="/static/slick" />
	<mvc:resources mapping="/webfonts/**" location="/static/webfonts/" />

	<!-- 3.定义视图解析器 配置jsp 显示ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" /><!-- 前缀 -->
		<property name="suffix" value=".html" /><!-- 后缀 -->
	</bean>

	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="com.data_miner.controller" />
	
	<!-- 配置拦截器 -->
	<!-- 	mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
</beans>